def longestRepeatedSubstring(str):
 
    n = len(str)
    LCSRe = [[0 for x in range(n + 1)] 
                for y in range(n + 1)]
 
    res = "" # To store result
    res_length = 0 # To store length of result
 
    # building table in bottom-up manner
    index = 0
    for i in range(1, n + 1):
        for j in range(i + 1, n + 1):
             
            # (j-i) > LCSRe[i-1][j-1] to remove
            # overlapping
            if (str[i - 1] == str[j - 1] and
                LCSRe[i - 1][j - 1] < (j - i)):
                LCSRe[i][j] = LCSRe[i - 1][j - 1] + 1
 
                # updating maximum length of the
                # substring and updating the finishing
                # index of the suffix
                if (LCSRe[i][j] > res_length):
                    res_length = LCSRe[i][j]
                    index = max(i, index)
                 
            else:
                LCSRe[i][j] = 0
 
    # If we have non-empty result, then insert 
    # all characters from first character to 
    # last character of string
    if (res_length > 0):
        for i in range(index - res_length + 1,
                                    index + 1):
            res = res + str[i - 1]
 
    return res
 
def repeats(string):
    for x in range(1, len(string)):
        substring = string[:x]

        if substring * (len(string)//len(substring))+(substring[:len(string)%len(substring)]) == string:
            print(substring)
            return "break"

    print(string)

str = '''et1 = (Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et2 = (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et3 = (Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et4 = (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et5 = (Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et6 = (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et7 = (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et8 = (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et9 = (Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et10 = (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et11 = (Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et12 = (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et13 = (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et14 = (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et15 = (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et16 = (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et17 = (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et18 = (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et19 = (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et20 = (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et21 = (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et22 = (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et23 = (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et24 = (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et25 = (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et26 = mh * (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0) * (- 1.0 / 2.0) + (mh * (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 - (mr * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0
et27 = (mr * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0
et28 = mh * (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0) * (- 1.0 / 2.0) + (mh * (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 - (mr * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0
et29 = (mr * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0
et30 = mh * (Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0) * (- 1.0 / 2.0) + (mh * (Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 - (mr * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0
et31 = (mr * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0
et32 = (mr * (((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0)) / 2.0
et33 = mr * (((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0) * (- 1.0 / 2.0)
et34 = Ih_1 * 2.0 + (mr * ((Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0)) / 2.0
et35 = (mr * ((Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0)) / 2.0
et36 = (mh * ((Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0)) / 2.0
et37 = (mh * ((Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0)) / 2.0
et38 = (mr * (((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) * (Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) * (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) * (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0)) / 2.0
et39 = (mr * (((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) * (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) * (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) * (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0)) / 2.0
et40 = mr * (((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0) * (- 1.0 / 2.0)
et41 = mr * (((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0) * (- 1.0 / 2.0)
et42 = ((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) * (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) * (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et43 = ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) * (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et44 = ((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) * (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) * (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et45 = ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) * (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et46 = (mr * (((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0)) / 2.0
et47 = mr * (((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0) * (- 1.0 / 2.0)
et48 = mh * (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0) * (- 1.0 / 2.0) - (mh * (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 - Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0)) / 2.0
et49 = mr * (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 + Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0) * (- 1.0 / 2.0)
et50 = mh * (Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0) * (- 1.0 / 2.0) + (mh * (Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 - (mr * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0
et51 = (mr * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0
et52 = mh * (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0) * (- 1.0 / 2.0) - (mh * (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 - Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0)) / 2.0
et53 = mr * (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 + Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0) * (- 1.0 / 2.0)
et54 = mh * (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0) * (- 1.0 / 2.0) + (mh * (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 - (mr * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0
et55 = (mr * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0
et56 = mh * (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0) * (- 1.0 / 2.0) - (mh * (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 - Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0)) / 2.0
et57 = mr * (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 + Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0) * (- 1.0 / 2.0)
et58 = mh * (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0) * (- 1.0 / 2.0) + (mh * (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 - (mr * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0
et59 = (mr * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0
et60 = (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et61 = (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et62 = (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et63 = (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et64 = (Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et65 = (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et66 = (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et67 = (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et68 = (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et69 = (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et70 = (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et71 = (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et72 = (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et73 = (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et74 = (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et75 = (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et76 = Ib_1 + Ih_1 * 2.0 + Ir_1 * 2.0 + (mh * ((Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0)) / 2.0
et77 = (mh * ((Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0)) / 2.0
et78 = (mr * ((Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) ** 2 * 2.0 + (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) ** 2 * 2.0 + (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) ** 2 * 2.0)) / 2.0
et79 = (mr * ((Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) ** 2 * 2.0 + (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) ** 2 * 2.0 + (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) ** 2 * 2.0)) / 2.0
et80 = mh * (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0) * (- 1.0 / 2.0) - (mh * (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 - Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0)) / 2.0
et81 = mr * (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 + Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0) * (- 1.0 / 2.0)
et82 = mh * (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0) * (- 1.0 / 2.0) - (mh * (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 - Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0)) / 2.0
et83 = mr * (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 + Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0) * (- 1.0 / 2.0)
et84 = mh * (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0) * (- 1.0 / 2.0) - (mh * (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 - Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0)) / 2.0
et85 = mr * (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 + Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0) * (- 1.0 / 2.0)
et86 = ((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) * (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) * (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et87 = ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) * (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et88 = ((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) * (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) * (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et89 = ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) * (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et90 = (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et91 = (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et92 = (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et93 = (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et94 = (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et95 = (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et96 = (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et97 = (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et98 = (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et99 = mr * ((Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0)
et100 = - 1.0 / 2.0
et101 = (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et102 = (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et103 = mh * ((Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0) * (- 1.0 / 2.0)
et104 = mh * ((Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0) * (- 1.0 / 2.0) + et99 * et100
et105 = mr * (et101 + et102) * (- 1.0 / 2.0)
et106 = Ib_2 + Ih_2 * 2.0 + Ir_2 * 2.0 + mh * ((Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) ** 2 * 2.0 + (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) ** 2 * 2.0 + (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) ** 2 * 2.0)
et107 = mr * ((Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) ** 2 * 2.0 + (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) ** 2 * 2.0 + (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) ** 2 * 2.0)
et108 = (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et109 = (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et110 = (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et111 = (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et112 = (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et113 = (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et114 = (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et115 = (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et116 = mr * (((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0) * (- 1.0 / 2.0)
et117 = mr * (((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0) * (- 1.0 / 2.0)
et118 = (Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et119 = (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et120 = (Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et121 = (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et122 = (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et123 = (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et124 = (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et125 = (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et126 = Ib_3 + Ih_3 * 2.0 + Ir_3 * 2.0 + (mh * ((Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0)) / 2.0
et127 = (mh * ((Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0)) / 2.0
et128 = (mr * ((Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0)) / 2.0
et129 = (mr * ((Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0)) / 2.0
et130 = mr * ((Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0)
et131 = - 1.0 / 2.0
et132 = (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et133 = (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et134 = mh * ((Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0) * (- 1.0 / 2.0)
et135 = mh * ((Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0) * (- 1.0 / 2.0) + et130 * et131
et136 = mr * (et132 + et133) * (- 1.0 / 2.0)
et137 = (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et138 = (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et139 = (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et140 = (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et141 = (Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et142 = (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et143 = (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et144 = (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
et145 = (mr * (((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) * (Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) * (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) * (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0)) / 2.0
et146 = (mr * (((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) * (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) * (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) * (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0)) / 2.0
et147 = (Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et148 = (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et149 = (Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et150 = (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et151 = (Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et152 = (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et153 = (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et154 = (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
mt1 = np.array([et34 + et35 + et36 + et37,et32 + et33,et30 + et31,et28 + et29,et26 + et27,(mh * (et23 + et24 + et25)) / 2.0 - (mh * (et21 + et22)) / 2.0 - (mr * (et17 + et18)) / 2.0 - (mr * (et19 + et20)) / 2.0,mh * (et9 + et10) * (- 1.0 / 2.0) + (mh * (et11 + et12)) / 2.0 - (mr * (et13 + et14)) / 2.0 + (mr * (et15 + et16)) / 2.0,(mh * (et1 + et2)) / 2.0 - (mh * (et3 + et4)) / 2.0 + (mr * (et5 + et6)) / 2.0 - (mr * (et7 + et8)) / 2.0,et46 + et47])
mt2 = np.array([Ir_1 * 2.0 + (mr * (((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) ** 2 * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) ** 2 * 2.0 + ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) ** 2 * 2.0)) / 2.0 + (mr * (((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) ** 2 * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) ** 2 * 2.0 + ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) ** 2 * 2.0)) / 2.0,(mr * (L7a * Rb_1_3 * cos_theta_WL_2 + L7a * Rb_1_2 * sin_theta_WL_2)) / 2.0 + (mr * (L7a * Rb_1_3 * cos_theta_WL_2 - L7a * Rb_1_2 * sin_theta_WL_2)) / 2.0])
mt3 = np.array([(mr * (L7a * Rb_2_3 * cos_theta_WL_2 + L7a * Rb_2_2 * sin_theta_WL_2)) / 2.0 + (mr * (L7a * Rb_2_3 * cos_theta_WL_2 - L7a * Rb_2_2 * sin_theta_WL_2)) / 2.0,(mr * (L7a * Rb_3_3 * cos_theta_WL_2 + L7a * Rb_3_2 * sin_theta_WL_2)) / 2.0 + (mr * (L7a * Rb_3_3 * cos_theta_WL_2 - L7a * Rb_3_2 * sin_theta_WL_2)) / 2.0,mr * (et42 + et43) * (- 1.0 / 2.0) + (mr * (et44 + et45)) / 2.0,et40 + et41,et38 + et39,et50 + et51,(mr * (L7a * Rb_1_3 * cos_theta_WL_2 + L7a * Rb_1_2 * sin_theta_WL_2)) / 2.0 + (mr * (L7a * Rb_1_3 * cos_theta_WL_2 - L7a * Rb_1_2 * sin_theta_WL_2)) / 2.0,mb + mh * 2.0 + mr * 2.0,0.0,0.0,et48 + et49])
mt4 = np.array([- mh * (Rb_1_3 * offset_x * 2.0 - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0) - mr * (Rb_1_3 * offset_x * 2.0 - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0)])
mt5 = np.array([(mh * (Rb_1_2 * offset_x * 2.0 - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mh * (Rb_1_2 * offset_x * 2.0 + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_1_2 * offset_x * 2.0 - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_1_2 * offset_x * 2.0 + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0,et54 + et55,(mr * (L7a * Rb_2_3 * cos_theta_WL_2 + L7a * Rb_2_2 * sin_theta_WL_2)) / 2.0 + (mr * (L7a * Rb_2_3 * cos_theta_WL_2 - L7a * Rb_2_2 * sin_theta_WL_2)) / 2.0,0.0,mb + mh * 2.0 + mr * 2.0])
mt6 = np.array([0.0,et52 + et53,- mh * (Rb_2_3 * offset_x * 2.0 - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0) - mr * (Rb_2_3 * offset_x * 2.0 - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0)])
mt7 = np.array([(mh * (Rb_2_2 * offset_x * 2.0 - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mh * (Rb_2_2 * offset_x * 2.0 + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_2_2 * offset_x * 2.0 - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_2_2 * offset_x * 2.0 + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0,et58 + et59,(mr * (L7a * Rb_3_3 * cos_theta_WL_2 + L7a * Rb_3_2 * sin_theta_WL_2)) / 2.0 + (mr * (L7a * Rb_3_3 * cos_theta_WL_2 - L7a * Rb_3_2 * sin_theta_WL_2)) / 2.0,0.0,0.0])
mt8 = np.array([mb + mh * 2.0 + mr * 2.0,et56 + et57,- mh * (Rb_3_3 * offset_x * 2.0 - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0) - mr * (Rb_3_3 * offset_x * 2.0 - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0)])
mt9 = np.array([(mh * (Rb_3_2 * offset_x * 2.0 - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mh * (Rb_3_2 * offset_x * 2.0 + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_3_2 * offset_x * 2.0 - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_3_2 * offset_x * 2.0 + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0,(mh * (et96 + et97 + et98)) / 2.0 - (mh * (et94 + et95)) / 2.0 - (mr * (et90 + et91)) / 2.0 - (mr * (et92 + et93)) / 2.0])
mt10 = np.array([mr * (et86 + et87) * (- 1.0 / 2.0) + (mr * (et88 + et89)) / 2.0,et84 + et85,et82 + et83,et80 + et81,et76 + et77 + et78 + et79,(mh * (et68 + et69)) / 2.0 + (mh * (et70 + et71)) / 2.0 + (mr * (et72 + et73)) / 2.0 - (mr * (et74 + et75)) / 2.0,mh * (et60 + et61) * (- 1.0 / 2.0) - (mh * (et62 + et63)) / 2.0 - (mr * (et64 + et65)) / 2.0 + (mr * (et66 + et67)) / 2.0,mh * (et118 + et119) * (- 1.0 / 2.0) + (mh * (et120 + et121)) / 2.0 - (mr * (et122 + et123)) / 2.0 + (mr * (et124 + et125)) / 2.0,et116 + et117])
mt11 = np.array([- mh * (Rb_1_3 * offset_x * 2.0 - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0) - mr * (Rb_1_3 * offset_x * 2.0 - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0),- mh * (Rb_2_3 * offset_x * 2.0 - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0) - mr * (Rb_2_3 * offset_x * 2.0 - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0)])
mt12 = np.array([- mh * (Rb_3_3 * offset_x * 2.0 - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0) - mr * (Rb_3_3 * offset_x * 2.0 - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0),(mh * (et108 + et109)) / 2.0 + (mh * (et110 + et111)) / 2.0 + (mr * (et112 + et113)) / 2.0 - (mr * (et114 + et115)) / 2.0,et106 + et107,et103 + et104 + et105,(mh * (et147 + et148)) / 2.0 - (mh * (et149 + et150)) / 2.0 + (mr * (et151 + et152)) / 2.0 - (mr * (et153 + et154)) / 2.0,et145 + et146])
mt13 = np.array([(mh * (Rb_1_2 * offset_x * 2.0 - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mh * (Rb_1_2 * offset_x * 2.0 + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_1_2 * offset_x * 2.0 - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_1_2 * offset_x * 2.0 + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0])
mt14 = np.array([(mh * (Rb_2_2 * offset_x * 2.0 - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mh * (Rb_2_2 * offset_x * 2.0 + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_2_2 * offset_x * 2.0 - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_2_2 * offset_x * 2.0 + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0])
mt15 = np.array([(mh * (Rb_3_2 * offset_x * 2.0 - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mh * (Rb_3_2 * offset_x * 2.0 + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_3_2 * offset_x * 2.0 - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_3_2 * offset_x * 2.0 + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0,mh * (et137 + et138) * (- 1.0 / 2.0) - (mh * (et139 + et140)) / 2.0 - (mr * (et141 + et142)) / 2.0 + (mr * (et143 + et144)) / 2.0,et134 + et135 + et136,et126 + et127 + et128 + et129])
M = np.array([*mt1,*mt2,*mt3,*mt4,*mt5,*mt6,*mt7,*mt8,*mt9,*mt10,*mt11,*mt12,*mt13,*mt14,*mt15]).reshape(8,8)
# if nargout > 1
et155 = mr * (- offset_x * w_3 + w_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + (L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1)
et156 = - (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
et157 = mh * (offset_x * w_3 - w_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_1 + Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
et158 = - mh * (- offset_x * w_3 + w_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_1 - Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
et159 = mr * (offset_x * w_3 - w_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + (L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
et160 = et155 * et156
et161 = mr * (- offset_x * w_3 + w_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + (L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1)
et162 = - (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
et163 = mh * (offset_x * w_3 - w_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_2 + Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
et164 = - mh * (- offset_x * w_3 + w_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_2 - Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
et165 = mr * (offset_x * w_3 - w_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + (L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
et166 = et161 * et162
et167 = mr * (- offset_x * w_3 + w_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + (L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1)
et168 = - (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
et169 = mh * (offset_x * w_3 - w_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_3 + Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
et170 = - mh * (- offset_x * w_3 + w_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_3 - Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
et171 = mr * (offset_x * w_3 - w_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + (L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
et172 = et167 * et168
et173 = mr * (w_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - w_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1))
et174 = - (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
et175 = mr * (w_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + w_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
et176 = et173 * et174 + mh * (w_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + w_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_1 + Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
et177 = mh * (w_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - w_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_1 - Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
et178 = mr * (w_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - w_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1))
et179 = - (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
et180 = mr * (w_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + w_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
et181 = et178 * et179 + mh * (w_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + w_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_2 + Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
et182 = mh * (w_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - w_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_2 - Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
et183 = offset_x * (w_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + w_3 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) - (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_1_1 * w_2 - Rb_1_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_1_1 * w_3 - Rb_1_3 * w_1) * 2.0 + (w_1 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - w_3 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - (w_1 * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + w_2 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
et184 = - Rb_1_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
et185 = offset_x * (w_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + w_3 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) - (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_2_1 * w_2 - Rb_2_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_2_1 * w_3 - Rb_2_3 * w_1) * 2.0 + (w_1 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - w_3 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - (w_1 * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + w_2 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
et186 = - Rb_2_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
et187 = offset_x * (w_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + w_3 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) - (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_3_1 * w_2 - Rb_3_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_3_1 * w_3 - Rb_3_3 * w_1) * 2.0 + (w_1 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - w_3 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - (w_1 * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + w_2 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
et188 = - Rb_3_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
et189 = (Rb_1_1 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_1 * w_3 - Rb_1_3 * w_1) - (Rb_1_2 * w_3 - Rb_1_3 * w_2) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_1 + Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et190 = (Rb_2_1 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_1 * w_3 - Rb_2_3 * w_1) - (Rb_2_2 * w_3 - Rb_2_3 * w_2) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_2 + Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et191 = (Rb_3_1 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_1 * w_3 - Rb_3_3 * w_1) - (Rb_3_2 * w_3 - Rb_3_3 * w_2) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_3 + Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et192 = (Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (et183 + et184) * 2.0 + (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (et185 + et186) * 2.0 + (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (et187 + et188) * 2.0
et193 = - Rb_1_1 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + (Rb_1_2 * w_3 - Rb_1_3 * w_2) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)
et194 = (xD_1 - Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et195 = - Rb_2_1 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + (Rb_2_2 * w_3 - Rb_2_3 * w_2) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)
et196 = (xD_2 - Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et197 = - Rb_3_1 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + (Rb_3_2 * w_3 - Rb_3_3 * w_2) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)
et198 = (xD_3 - Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et199 = - offset_x * (w_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + w_3 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) + (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_1_1 * w_2 - Rb_1_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_1_1 * w_3 - Rb_1_3 * w_1) * 2.0 + (w_1 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - w_3 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) + (w_1 * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + w_2 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
et200 = - Rb_1_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
et201 = - offset_x * (w_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + w_3 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) + (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_2_1 * w_2 - Rb_2_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_2_1 * w_3 - Rb_2_3 * w_1) * 2.0 + (w_1 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - w_3 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) + (w_1 * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + w_2 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
et202 = - Rb_2_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
et203 = - offset_x * (w_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + w_3 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) + (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_3_1 * w_2 - Rb_3_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_3_1 * w_3 - Rb_3_3 * w_1) * 2.0 + (w_1 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - w_3 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) + (w_1 * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + w_2 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
et204 = - Rb_3_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
et205 = (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et206 = (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et207 = (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et208 = Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)
et209 = (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et210 = Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)
et211 = (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et212 = Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)
et213 = (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et214 = (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_1 + Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et215 = (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_2 + Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et216 = (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_3 + Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et217 = (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_1 - Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et218 = (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_2 - Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et219 = (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_3 - Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et220 = mr * (w_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - w_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1))
et221 = - (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
et222 = mr * (w_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + w_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
et223 = et220 * et221 - g * mh * offset_x * 2.0 - g * mr * offset_x * 2.0 + mh * (w_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + w_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_3 + Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
et224 = mh * (w_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - w_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_3 - Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
et225 = (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * - 2.0 + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 + offset_x * (w_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + w_3 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) + (w_1 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - w_3 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
et226 = - (w_1 * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + w_2 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
et227 = (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * - 2.0 + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 + offset_x * (w_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + w_3 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) + (w_1 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - w_3 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
et228 = - (w_1 * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + w_2 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
et229 = (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * - 2.0 + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 + offset_x * (w_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + w_3 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) + (w_1 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - w_3 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
et230 = - (w_1 * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + w_2 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
et231 = offset_x * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + Rb_1_1 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_2 * w_3 - Rb_1_3 * w_2) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
et232 = (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et233 = offset_x * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + Rb_2_1 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_2 * w_3 - Rb_2_3 * w_2) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
et234 = (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et235 = offset_x * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + Rb_3_1 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_2 * w_3 - Rb_3_3 * w_2) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
et236 = (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et237 = (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * 2.0 + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 - offset_x * (w_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + w_3 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) + (w_1 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - w_3 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
et238 = (w_1 * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + w_2 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
et239 = (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * 2.0 + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 - offset_x * (w_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + w_3 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) + (w_1 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - w_3 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
et240 = (w_1 * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + w_2 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
et241 = (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * 2.0 + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 - offset_x * (w_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + w_3 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) + (w_1 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - w_3 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
et242 = (w_1 * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + w_2 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
et243 = offset_x * (Rb_1_1 * w_3 - Rb_1_3 * w_1) - Rb_1_1 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_2 * w_3 - Rb_1_3 * w_2) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
et244 = (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * - 2.0
et245 = offset_x * (Rb_2_1 * w_3 - Rb_2_3 * w_1) - Rb_2_1 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_2 * w_3 - Rb_2_3 * w_2) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
et246 = (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * - 2.0
et247 = offset_x * (Rb_3_1 * w_3 - Rb_3_3 * w_1) - Rb_3_1 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_2 * w_3 - Rb_3_3 * w_2) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
et248 = (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * - 2.0
et249 = (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et250 = (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et251 = (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et252 = (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et253 = (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et254 = (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et255 = (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_1 + Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et256 = (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_2 + Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et257 = (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_3 + Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et258 = (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_1 - Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et259 = (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_2 - Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et260 = (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_3 - Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et261 = Rb_1_1 * (et157 + et158 + et159 + et160) + Rb_2_1 * (et163 + et164 + et165 + et166) + Rb_3_1 * (et169 + et170 + et171 + et172) - Rb_1_2 * (et175 + et176 + et177) - Rb_2_2 * (et180 + et181 + et182) - (mh * (et189 + et190 + et191 + et192)) / 2.0 - (mh * (et193 * et194 + et195 * et196 + et197 * et198 - (et199 + et200) * (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 - (et201 + et202) * (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 - (et203 + et204) * (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0)) / 2.0
et262 = w_2 * (- Ib_1 * w_1 + (Ih_1 * (thetaD_WL_1 * 2.0 - w_1 * 2.0)) / 2.0 - (Ih_1 * (thetaD_WL_1 * 2.0 + w_1 * 2.0)) / 2.0 + (Ir_1 * (thetaD_WL_2 * 2.0 - w_1 * 2.0)) / 2.0 - (Ir_1 * (thetaD_WL_2 * 2.0 + w_1 * 2.0)) / 2.0 + (mr * (et205 + et206 + et207)) / 2.0 - (mr * (et208 * et209 + et210 * et211 + et212 * et213)) / 2.0 + (mh * (et214 + et215 + et216)) / 2.0 + (mh * (et217 + et218 + et219)) / 2.0) - Rb_3_2 * (et222 + et223 + et224)
et263 = mr * ((Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (et225 + et226) * 2.0 + (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (et227 + et228) * 2.0 + (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (et229 + et230) * 2.0 + et231 * et232 + et233 * et234 + et235 * et236) * (- 1.0 / 2.0)
et264 = (mr * (et243 * et244 + et245 * et246 + et247 * et248 + (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (et237 + et238) * 2.0 + (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (et239 + et240) * 2.0 + (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (et241 + et242) * 2.0)) / 2.0 - w_1 * (- Ib_2 * w_2 - Ih_2 * w_2 * 2.0 - Ir_2 * w_2 * 2.0 + (mr * (et249 + et250 + et251)) / 2.0 + (mr * (et252 + et253 + et254)) / 2.0 + (mh * (et255 + et256 + et257)) / 2.0 + (mh * (et258 + et259 + et260)) / 2.0)
et265 = mr * (offset_x * w_2 + w_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1)
et266 = xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
et267 = mr * (- offset_x * w_2 + w_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1)
et268 = - (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
et269 = g * mr * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0
et270 = mh * (offset_x * w_2 + w_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (xD_3 + Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
et271 = mh * (offset_x * w_2 - w_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (xD_3 - Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) + et265 * et266 + et267 * et268
et272 = g * mh * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0
et273 = (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * - 2.0 + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 + offset_x * (w_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + w_3 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) + (w_1 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - w_3 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
et274 = - (w_1 * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + w_2 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
et275 = (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * - 2.0 + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 + offset_x * (w_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + w_3 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) + (w_1 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - w_3 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
et276 = - (w_1 * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + w_2 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
et277 = (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * - 2.0 + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 + offset_x * (w_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + w_3 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) + (w_1 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - w_3 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
et278 = - (w_1 * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + w_2 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
et279 = (Rb_1_2 * w_3 - Rb_1_3 * w_2) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - offset_x * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + Rb_1_1 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1)
et280 = (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et281 = (Rb_2_2 * w_3 - Rb_2_3 * w_2) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - offset_x * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + Rb_2_1 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1)
et282 = (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et283 = (Rb_3_2 * w_3 - Rb_3_3 * w_2) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - offset_x * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + Rb_3_1 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1)
et284 = (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et285 = (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * 2.0 + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 - offset_x * (w_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + w_3 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) + (w_1 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - w_3 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
et286 = (w_1 * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + w_2 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
et287 = (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * 2.0 + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 - offset_x * (w_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + w_3 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) + (w_1 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - w_3 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
et288 = (w_1 * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + w_2 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
et289 = (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * 2.0 + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 - offset_x * (w_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + w_3 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) + (w_1 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - w_3 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
et290 = (w_1 * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + w_2 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
et291 = (Rb_1_2 * w_3 - Rb_1_3 * w_2) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - offset_x * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + Rb_1_1 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1)
et292 = (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * - 2.0
et293 = (Rb_2_2 * w_3 - Rb_2_3 * w_2) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - offset_x * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + Rb_2_1 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1)
et294 = (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * - 2.0
et295 = (Rb_3_2 * w_3 - Rb_3_3 * w_2) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - offset_x * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + Rb_3_1 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1)
et296 = (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * - 2.0
et297 = mr * (w_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - w_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1))
et298 = - (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
et299 = mr * (w_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + w_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
et300 = et297 * et298 + mh * (w_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + w_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_1 + Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
et301 = mh * (w_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - w_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_1 - Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
et302 = mr * (w_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - w_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1))
et303 = - (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
et304 = mr * (w_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + w_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
et305 = et302 * et303 + mh * (w_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + w_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_2 + Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
et306 = mh * (w_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - w_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_2 - Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
et307 = offset_x * (w_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + w_3 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) - (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_1_1 * w_2 - Rb_1_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_1_1 * w_3 - Rb_1_3 * w_1) * 2.0 + (w_1 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - w_3 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - (w_1 * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + w_2 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
et308 = - Rb_1_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
et309 = offset_x * (w_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + w_3 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) - (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_2_1 * w_2 - Rb_2_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_2_1 * w_3 - Rb_2_3 * w_1) * 2.0 + (w_1 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - w_3 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - (w_1 * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + w_2 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
et310 = - Rb_2_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
et311 = offset_x * (w_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + w_3 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) - (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_3_1 * w_2 - Rb_3_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_3_1 * w_3 - Rb_3_3 * w_1) * 2.0 + (w_1 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - w_3 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - (w_1 * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + w_2 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
et312 = - Rb_3_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
et313 = (Rb_1_1 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - offset_x * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + (Rb_1_2 * w_3 - Rb_1_3 * w_2) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_1 + Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et314 = (Rb_2_1 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - offset_x * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + (Rb_2_2 * w_3 - Rb_2_3 * w_2) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_2 + Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et315 = (Rb_3_1 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - offset_x * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + (Rb_3_2 * w_3 - Rb_3_3 * w_2) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_3 + Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et316 = (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * (et307 + et308) * 2.0 + (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * (et309 + et310) * 2.0 + (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * (et311 + et312) * 2.0
et317 = Rb_1_1 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - offset_x * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + (Rb_1_2 * w_3 - Rb_1_3 * w_2) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
et318 = (xD_1 - Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et319 = Rb_2_1 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - offset_x * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + (Rb_2_2 * w_3 - Rb_2_3 * w_2) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
et320 = (xD_2 - Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et321 = Rb_3_1 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - offset_x * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + (Rb_3_2 * w_3 - Rb_3_3 * w_2) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
et322 = (xD_3 - Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et323 = - offset_x * (w_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + w_3 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) + (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_1_1 * w_2 - Rb_1_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_1_1 * w_3 - Rb_1_3 * w_1) * 2.0 + (w_1 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - w_3 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) + (w_1 * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + w_2 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
et324 = - Rb_1_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
et325 = - offset_x * (w_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + w_3 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) + (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_2_1 * w_2 - Rb_2_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_2_1 * w_3 - Rb_2_3 * w_1) * 2.0 + (w_1 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - w_3 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) + (w_1 * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + w_2 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
et326 = - Rb_2_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
et327 = - offset_x * (w_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + w_3 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) + (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_3_1 * w_2 - Rb_3_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_3_1 * w_3 - Rb_3_3 * w_1) * 2.0 + (w_1 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - w_3 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) + (w_1 * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + w_2 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
et328 = - Rb_3_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
et329 = (Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et330 = (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et331 = (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et332 = (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et333 = (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et334 = (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et335 = (Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_1 + Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et336 = (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_2 + Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et337 = (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_3 + Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et338 = (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_1 - Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et339 = (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_2 - Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et340 = (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_3 - Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et341 = (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et342 = (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et343 = (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et344 = Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)
et345 = (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et346 = Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)
et347 = (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et348 = Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)
et349 = (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et350 = (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_1 + Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et351 = (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_2 + Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et352 = (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_3 + Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et353 = (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_1 - Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et354 = (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_2 - Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et355 = (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_3 - Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et356 = mr * (w_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - w_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1))
et357 = - (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
et358 = mr * (w_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + w_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
et359 = et356 * et357 - g * mh * offset_x * 2.0 - g * mr * offset_x * 2.0 + mh * (w_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + w_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_3 + Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
et360 = mh * (w_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - w_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_3 - Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
et361 = mr * (offset_x * w_2 + w_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1)
et362 = xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
et363 = mr * (- offset_x * w_2 + w_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1)
et364 = - (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
et365 = mh * (offset_x * w_2 + w_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (xD_1 + Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
et366 = mh * (offset_x * w_2 - w_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (xD_1 - Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) + et361 * et362 + et363 * et364
et367 = mr * (offset_x * w_2 + w_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1)
et368 = xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
et369 = mr * (- offset_x * w_2 + w_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1)
et370 = - (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
et371 = mh * (offset_x * w_2 + w_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (xD_2 + Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
et372 = mh * (offset_x * w_2 - w_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (xD_2 - Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) + et367 * et368 + et369 * et370
et373 = Rb_3_1 * (et269 + et270 + et271 + et272) + (mr * (et279 * et280 + et281 * et282 + et283 * et284 + (et273 + et274) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (et275 + et276) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (et277 + et278) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0)) / 2.0
et374 = mr * ((Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (et285 + et286) * 2.0 + (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (et287 + et288) * 2.0 + (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (et289 + et290) * 2.0 + et291 * et292 + et293 * et294 + et295 * et296) * (- 1.0 / 2.0) + Rb_1_3 * (et299 + et300 + et301) + Rb_2_3 * (et304 + et305 + et306) + (mh * (et313 + et314 + et315 + et316)) / 2.0
et375 = (mh * (et317 * et318 + et319 * et320 + et321 * et322 - (et323 + et324) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 - (et325 + et326) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 - (et327 + et328) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0)) / 2.0 - w_1 * ((mr * (et329 + et330 + et331)) / 2.0 + (mr * (et332 + et333 + et334)) / 2.0 + Ib_3 * w_3 + Ih_3 * w_3 * 2.0 + Ir_3 * w_3 * 2.0 + (mh * (et335 + et336 + et337)) / 2.0 + (mh * (et338 + et339 + et340)) / 2.0)
et376 = - w_3 * (- Ib_1 * w_1 + (mh * (et350 + et351 + et352)) / 2.0 + (mh * (et353 + et354 + et355)) / 2.0 + (mr * (et341 + et342 + et343)) / 2.0 - (mr * (et344 * et345 + et346 * et347 + et348 * et349)) / 2.0 + (Ih_1 * (thetaD_WL_1 * 2.0 - w_1 * 2.0)) / 2.0 - (Ih_1 * (thetaD_WL_1 * 2.0 + w_1 * 2.0)) / 2.0 + (Ir_1 * (thetaD_WL_2 * 2.0 - w_1 * 2.0)) / 2.0 - (Ir_1 * (thetaD_WL_2 * 2.0 + w_1 * 2.0)) / 2.0) + Rb_3_3 * (et358 + et359 + et360) + Rb_1_1 * (et365 + et366) + Rb_2_1 * (et371 + et372)
et377 = mr * (offset_x * w_2 + w_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1)
et378 = xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
et379 = mr * (- offset_x * w_2 + w_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1)
et380 = - (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
et381 = g * mr * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0
et382 = mh * (offset_x * w_2 + w_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (xD_3 + Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
et383 = mh * (offset_x * w_2 - w_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (xD_3 - Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) + et377 * et378 + et379 * et380
et384 = g * mh * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0
et385 = mr * (- offset_x * w_3 + w_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + (L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1)
et386 = - (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
et387 = mh * (offset_x * w_3 - w_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_1 + Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
et388 = - mh * (- offset_x * w_3 + w_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_1 - Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
et389 = mr * (offset_x * w_3 - w_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + (L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
et390 = et385 * et386
et391 = mr * (- offset_x * w_3 + w_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + (L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1)
et392 = - (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
et393 = mh * (offset_x * w_3 - w_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_2 + Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
et394 = - mh * (- offset_x * w_3 + w_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_2 - Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
et395 = mr * (offset_x * w_3 - w_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + (L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
et396 = et391 * et392
et397 = mr * (- offset_x * w_3 + w_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + (L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1)
et398 = - (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
et399 = mh * (offset_x * w_3 - w_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_3 + Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
et400 = - mh * (- offset_x * w_3 + w_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_3 - Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
et401 = mr * (offset_x * w_3 - w_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + (L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
et402 = et397 * et398
et403 = (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_3 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
et404 = (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et405 = (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_3 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
et406 = (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et407 = (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_3 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
et408 = (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et409 = (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * - 2.0 + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 + offset_x * (w_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + w_3 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) + (w_1 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - w_3 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
et410 = - (w_1 * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + w_2 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
et411 = (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * - 2.0 + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 + offset_x * (w_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + w_3 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) + (w_1 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - w_3 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
et412 = - (w_1 * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + w_2 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
et413 = (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * - 2.0 + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 + offset_x * (w_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + w_3 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) + (w_1 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - w_3 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
et414 = - (w_1 * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + w_2 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
et415 = (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_3 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
et416 = (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et417 = (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_3 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
et418 = (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et419 = (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_3 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
et420 = (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et421 = (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * 2.0 + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 - offset_x * (w_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + w_3 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) + (w_1 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - w_3 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
et422 = (w_1 * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + w_2 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
et423 = (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * 2.0 + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 - offset_x * (w_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + w_3 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) + (w_1 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - w_3 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
et424 = (w_1 * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + w_2 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
et425 = (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * 2.0 + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 - offset_x * (w_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + w_3 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) + (w_1 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - w_3 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
et426 = (w_1 * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + w_2 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
et427 = (Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et428 = (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et429 = (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et430 = (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et431 = (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et432 = (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et433 = (Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_1 + Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et434 = (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_2 + Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et435 = (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_3 + Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et436 = (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_1 - Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et437 = (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_2 - Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et438 = (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_3 - Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
et439 = mr * (offset_x * w_2 + w_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1)
et440 = xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
et441 = mr * (- offset_x * w_2 + w_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1)
et442 = -(xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
et443 = mh * (offset_x * w_2 + w_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (xD_1 + Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
et444 = mh * (offset_x * w_2 - w_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (xD_1 - Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) + et439 * et440 + et441 * et442
h = ft_1(np.array([Ib_2,Ib_3,Ih_2,Ih_3,Ir_2,Ir_3,L3a,L3c,L7a,P5_1,P5_2,Rb_1_1,Rb_1_2,Rb_1_3,Rb_2_1,Rb_2_2,Rb_2_3,Rb_3_1,Rb_3_2,Rb_3_3,alpha_3,et261,et262,et263,et264,et373,et374,et375,et376,et381,et382,et383,et384,et387,et388,et389,et390,et393,et394,et395,et396,et399,et400,et401,et402,et403,et404,et405,et406,et407,et408,et409,et410,et411,et412,et413,et414,et415,et416,et417,et418,et419,et420,et421,et422,et423,et424,et425,et426,et427,et428,et429,et430,et431,et432,et433,et434,et435,et436,et437,et438,et443,et444,g,mb,mh,mr,offset_x,thetaD_WL_1,thetaD_WL_2,theta_WL_1,theta_WL_2,w_1,w_2,w_3,xD_1,xD_2,xD_3]))'''
print(repeats(str))